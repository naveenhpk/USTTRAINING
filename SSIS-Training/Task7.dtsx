<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/25/2024 11:53:17 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="A0ED851B2D535F4"
  DTS:CreatorName="A0ED851B2D535F4\Administrator"
  DTS:DTSID="{CB1AE48D-09E2-4FF2-BA97-76B6B7FE4D49}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="16393"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="32"
  DTS:VersionGUID="{8EE4AAD2-9322-4222-AC01-8E9AC907A70D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DBConnection]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7C4467E8-AEB0-4D0B-94F6-7C787837F8D4}"
      DTS:ObjectName="DBConnection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=a0ed851b2d535f4;User ID=sa;Initial Catalog=NAVDB;Provider=MSOLEDBSQL.1;Application Name=SSIS-Package2-{7C4467E8-AEB0-4D0B-94F6-7C787837F8D4}a0ed851b2d535f4.NAVDB.sa;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAMeO3OwdkikyL1vYsYh5xkAAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAABZU3wGHOGdmoNdgFpBJ9g4dQh9Q/K56++b/u8ulI9hQAAAAAOgAAAAAIAACAAAACBQQHtoXvBNhBxM+mEvq8IG17CPM8hpCD82nBvifksLiAAAACBScR04lLbtjVoXbKjl4T6ywCKQqG568xJCyIuB79H8kAAAAA1Oohr2EkCIWgS2ythuVOnKIryRF6QuLB9feFVTJrwtzUBZ3JlfkWZ0v45MATP80Tdl9nRttyEwrAmWdBy0sQa</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F18FBE93-8E41-4376-BA1B-FADD6292F562}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Test\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2F4BA1F4-B94C-480C-95C0-0E0E4EB607E3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">Airports</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C92816E4-BD8B-4998-92D4-8C675FC8FA17}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6ac98cf7e8ad4dccab3528fd0104ad60"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FilePath,User::TableName">
          <ProjectItem
            Name="ST_6ac98cf7e8ad4dccab3528fd0104ad60.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5CFBDFBB-DCAE-4CEE-8367-F93A222D6D8E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6ac98cf7e8ad4dccab3528fd0104ad60</RootNamespace>
    <AssemblyName>ST_6ac98cf7e8ad4dccab3528fd0104ad60</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties.Settings.get_Default():ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties.Sett" +
    "ings")]

namespace ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion



#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient; // Added for SQL connection
using System.IO; // Added for file operations
#endregion

namespace ST_6ac98cf7e8ad4dccab3528fd0104ad60
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // Set variables
                string serverName = "a0ed851b2d535f4"; // Replace with your SQL Server instance name
                string databaseName = "NAVDB"; // Replace with your database name
                string tableName = "Airports"; // Replace with your table name
                string username = "sa"; // Replace with your SQL Server username
                string password = "pass@word1"; // Replace with your SQL Server password
                string connectionString = $"Data Source={serverName};Initial Catalog={databaseName};User ID={username};Password={password};";

                // Create SqlConnection using connection string
                using (SqlConnection conn = new SqlConnection(connectionString))
                {
                    conn.Open(); // Open the connection

                    // Get all CSV files in the specified directory
                    string filePath = @"D:\Test"; // Update filepath accordingly
                    string[] fileEntries = Directory.GetFiles(filePath, "*.csv");

                    // Process each file found
                    foreach (string fileName in fileEntries)
                    {
                        using (StreamReader SourceFile = new StreamReader(fileName))
                        {
                            string Line;
                            int ctr = 0;

                            while ((Line = SourceFile.ReadLine()) != null)
                            {
                                if (ctr != 0) // Skip header if present (assuming first line is header)
                                {
                                    Line = Line.Trim();

                                    // Split the line by comma and trim each field
                                    string[] values = Line.Split(',');

                                    // Construct the SQL query (using parameterized query for safety)
                                    string query = $"INSERT INTO {tableName} (airport_id, city, state, name) " +
                                                   $"VALUES (@AirportId, @City, @State, @Name)";

                                    // Execute SQL query with parameters
                                    using (SqlCommand SQLCommand = new SqlCommand(query, conn))
                                    {
                                        SQLCommand.Parameters.AddWithValue("@AirportId", values[0].Trim());
                                        SQLCommand.Parameters.AddWithValue("@City", values[1].Trim());
                                        SQLCommand.Parameters.AddWithValue("@State", values[2].Trim());
                                        SQLCommand.Parameters.AddWithValue("@Name", values[3].Trim());

                                        SQLCommand.ExecuteNonQuery();
                                    }
                                }
                                ctr++;
                            }
                        }
                    }

                    // Set SSIS task result to success
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (Exception ex)
            {
                // Log error and set SSIS task result to failure
                Dts.Events.FireError(0, "Exception from Script Task", ex.Message + "\r" + ex.StackTrace, String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

    

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6ac98cf7e8ad4dccab3528fd0104ad60</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6ac98cf7e8ad4dccab3528fd0104ad60</msb:DisplayName>
    <msb:ProjectId>{92E0EAE7-C8ED-4669-BEC6-2C0EE0F61581}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6ac98cf7e8ad4dccab3528fd0104ad60.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6ac98cf7e8ad4dccab3528fd0104ad60")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6ac98cf7e8ad4dccab3528fd0104ad60")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6ac98cf7e8ad4dccab3528fd0104ad60.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6ac98cf7e8ad4dccab3528fd0104ad60.dll">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
3AUAAE0ABAAKABEAygO1ABEA8wC5ABEAeQC9AAYGOADBAFaAzAXEAFaA0wDEAFAgAAAAAIYA4QMG
AAEAtCIAAAAAhhjZBAYAAQC8IgAAAACDGNkEBgABAMQiAAAAAJMImgTIAAEA8CIAAAAAkwjbAM0A
AQD3IgAAAACTCOcA0gABAP8iAAAAAJYICQbYAAIABiMAAAAAhhjZBAYAAgAOIwAAAACRGN8E3QAC
AAAAAQD6AgkA2QQBABEA2QQGABkA2QQKACkA2QQQADEA2QQQADkA2QQQAEEA2QQQAEkA2QQQAFEA
2QQQAFkA2QQQAGEA2QQQAGkA2QQGAKEA2QQGAMkA2QQVANkA2QQGAOEA9QUyAHkA2QQQAOkA1gMG
APEAqwU4AIEA2QQQAOEAwAM/AOEAAwZDAOEA9QVKAIkA2QRRAIkAvQVYAAEB7QJeABEBRwZmABkB
NwEGACEBxQA/AHEA1AVqACkBFQYBACkB6gVwAJEAiQA/AJEAagA/AOEAYQZ2ADEBzwR5AHEA2QQG
AKkA2QQGADkBswCCADkBOgaLALEA2QSRANEA2QQGAAgAFACrAAgAGACwACkAcwAYAS4ACwDwAC4A
EwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQAS4AUwBKAS4AWwBn
AUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAJ4E4QAAAPsA5gAAAA0G6wACAAQA
AwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAA0j95gAAAAAAAABAAAABAAAAAAAAAAAAAAAmQBM
AAAAAAAQAAAAAAAAAAAAAACiACEDAAAAAAQAAAAAAAAAAAAAAJkAQAAAAAAABAAAAAAAAAAAAAAA
mQC5AwAAAAAAAAAAAQAAACoFAAAFAAIAAAAAAABTVF82YWM5OGNmN2U4YWQ0ZGNjYWIzNTI4ZmQw
MTA0YWQ2MAA8TW9kdWxlPgBTeXN0ZW0uSU8AdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBE
YkNvbW1hbmQAU3FsQ29tbWFuZABnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAUmVh
ZExpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVy
ZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlz
cG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAQWRkV2l0aFZhbHVlAHZhbHVlAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF82YWM5OGNmN2U4YWQ0ZGNjYWIzNTI4ZmQw
MTA0YWQ2MC5kbGwAU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4A
U3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rp
b24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNl
cHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAENoYXIAU3RyZWFtUmVhZGVyAFRl
eHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAFNxbFBhcmFt
ZXRlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNmFjOThjZjdlOGFkNGRj
Y2FiMzUyOGZkMDEwNGFkNjAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNUXzZhYzk4Y2Y3ZThhZDRkY2NhYjM1MjhmZDAxMDRhZDYwLlByb3BlcnRpZXMAR2V0
RmlsZXMAU2V0dGluZ3MAZ2V0X1BhcmFtZXRlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAZ2V0X0V2ZW50cwBDb25jYXQAT2JqZWN0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVz
dWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AERp
cmVjdG9yeQBFbXB0eQAAAB9hADAAZQBkADgANQAxAGIAMgBkADUAMwA1AGYANAAAC04AQQBWAEQA
QgAAEUEAaQByAHAAbwByAHQAcwAABXMAYQAAFXAAYQBzAHMAQAB3AG8AcgBkADEAABlEAGEAdABh
ACAAUwBvAHUAcgBjAGUAPQAAIzsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQAAEzsA
VQBzAGUAcgAgAEkARAA9AAAVOwBQAGEAcwBzAHcAbwByAGQAPQAAAzsAAA9EADoAXABUAGUAcwB0
AAALKgAuAGMAcwB2AAAZSQBOAFMARQBSAFQAIABJAE4AVABPACAAAICVIAAoAGEAaQByAHAAbwBy
AHQAXwBpAGQALAAgAGMAaQB0AHkALAAgAHMAdABhAHQAZQAsACAAbgBhAG0AZQApACAAVgBBAEwA
VQBFAFMAIAAoAEAAQQBpAHIAcABvAHIAdABJAGQALAAgAEAAQwBpAHQAeQAsACAAQABTAHQAYQB0
AGUALAAgAEAATgBhAG0AZQApAAAVQABBAGkAcgBwAG8AcgB0AEkAZAAAC0AAQwBpAHQAeQAADUAA
UwB0AGEAdABlAAALQABOAGEAbQBlAAA1RQB4AGMAZQBwAHQAaQBvAG4AIABmAHIAbwBtACAAUwBj
AHIAaQBwAHQAIABUAGEAcwBrAAADDQAAcVMAVABfADYAYQBjADkAOABjAGYANwBlADgAYQBkADQA
ZABjAGMAYQBiADMANQAyADgAZgBkADAAMQAwADQAYQBkADYAMAAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAtjAi3kBdyk+OXKebiC6TjgAEIAEBCAMgAAEFIAEBEREE
IAEBDgUgAQERYRYHDg4ODg4OEj0dDggSQQ4IHQ4SRRJJBQABDh0OBgACHQ4ODgMgAA4GIAEdDh0D
BgADDg4ODgYgAgEOEj0FIAASgIEHIAISgIUOHAMgAAgFIAASgJUFIAASgJkCBg4IIAUCCA4ODggI
AAESgJ0RgKEFIAASgKUHIAIBDhKApQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJZAwYS
XQMGEhACBggDBhEUBAAAElkEAAASXQUAAQESXQQAABIQAwAAAQQIABJZBAgAEl0ECAASEAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNmFjOThj
ZjdlOGFkNGRjY2FiMzUyOGZkMDEwNGFkNjAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjcAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAcDMAAAAAAAAAAAAAijMAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAHwzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA95gNIwAAAQD3mA0jPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA2AGEAYwA5ADgAYwBmADcAZQA4AGEAZAA0AGQAYwBjAGEAYgAzADUAMgA4AGYAZAAw
ADEAMAA0AGEAZAA2ADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA5ADcAMwAuADMAOQAxADUAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA2AGEAYwA5ADgAYwBmADcAZQA4AGEAZAA0AGQAYwBjAGEAYgAzADUAMgA4AGYAZAAwADEA
MAA0AGEAZAA2ADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADYAYQBjADkAOABjAGYANwBlADgAYQBkADQAZABjAGMAYQBiADMANQAyADgA
ZgBkADAAMQAwADQAYQBkADYAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA2AGEAYwA5ADgAYwBmADcAZQA4AGEAZAA0AGQAYwBjAGEAYgAzADUAMgA4AGYA
ZAAwADEAMAA0AGEAZAA2ADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAOQA3ADMALgAzADkAMQA1ADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOQA3ADMALgAzADkAMQA1ADkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAnDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="267,51" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>